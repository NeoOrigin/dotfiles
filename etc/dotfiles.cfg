#!/bin/ksh

## Error Management ############################################################################################################################################################

DOTFILES_LOG="${DOTFILES_HOME}/log"                                                                                   # The path to the main log file

DOTFILES_DEBUG="${DOTFILES_DEBUG:-false}"                                                                             # Create debug output


## Authorisation / Security ####################################################################################################################################################

DOTFILES_AUTHENTICATE_PATH="$DOTFILES_HOME/lib/authenticate_all"                                                      # Script that performs authentication method        

DOTFILES_AUTHORIZE_PATH="$DOTFILES_HOME/lib/authorize_basic"                                                          # Script that performs authorization method        

DOTFILES_AUTHORIZE_FILE="$DOTFILES_HOME/var/userauth.cfg"                                                             # Admin maintained user role mappings


## Roles / Functional ##########################################################################################################################################################

DOTFILES_ADMIN_CONFIG="/etc/dotfiles.conf"                                                                            # Path to the administrator maintained config file

DOTFILES_ROLES_PATH="${DOTFILES_ROLES_PATH:-$DOTFILES_HOME/roles:$HOME/.roles}"                                       # The colon seperated list of paths to look for roles

DOTFILES_LINK_BASE="${DOTFILES_LINK_BASE:-~}"                                                                         # The location where all links are symlinked by default


## Environment Initialisation ##################################################################################################################################################

DOTFILES_INCLUDE_DEPENDENCIES="${DOTFILES_INCLUDE_DEPENDENCIES:-true}"                                                # Determines if roles dependencies are included

DOTFILES_INCLUDE_ENV="${DOTFILES_INCLUDE_ENV:-true}"                                                                  # Determines if roles environment variables are inherited

DOTFILES_INCLUDE_LINKS="${DOTFILES_INCLUDE_LINKS:-true}"                                                              # Determines if roles files are symbolic linked to

DOTFILES_INCLUDE_PATHS="${DOTFILES_INCLUDE_PATHS:-true}"                                                              # Determines if bin and lib role directories are added to environment paths

DOTFILES_INCLUDE_FILES="${DOTFILES_INCLUDE_FILES:-true}"                                                              # Determines if role files are copied 

DOTFILES_INCLUDE_ALIASES="${DOTFILES_INCLUDE_ALIASES:-true}"                                                          # Determines if role aliases are created

DOTFILES_INCLUDE_SCRIPT="${DOTFILES_INCLUDE_SCRIPT:-true}"                                                            # Determines if the role script is executed

DOTFILES_INCLUDE_TEMPLATES="${DOTFILES_INCLUDE_TEMPLATES:-true}"                                                      # Determines if role templates are used

DOTFILES_EVALUATION_ORDER="${DOTFILES_EVALUATION_ORDER:-links files dependencies path env aliases script templates}"  # Determines the order in which a role is built (left to right)

DOTFILES_UNSET_EMPTY_VARIABLES="${DOTFILES_UNSET_EMPTY_VARIABLES:-true}"                                              # Will remove any environment variables if blank on role release

DOTFILES_TEMPLATE_STRATEGY="${DOTFILES_TEMPLATE_STRATEGY:-auto}"                                                      # auto - template engine driven by file extension
